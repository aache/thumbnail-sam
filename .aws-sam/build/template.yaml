AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM app: S3 uploads -> Lambda thumbnail -> thumbnails in same bucket -> DynamoDB metadata

Globals:
  Function:
    Runtime: python3.11
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        DDB_TABLE: !Ref ImageUploadsTable
        THUMBNAIL_PREFIX: "thumbnails/"
        THUMBNAIL_SIZE: "200"
        THUMBNAIL_FORMAT: "JPEG"

Resources:

  ## S3 bucket for uploads
  UploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-uploads-${AWS::Region}-${AWS::AccountId}"

  ## DynamoDB table for metadata
  ImageUploadsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-ImageUploads"
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  ## Pillow layer
  PillowLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "${AWS::StackName}-PillowLayer"
      Description: Pillow layer for image processing
      ContentUri: ./layer
      CompatibleRuntimes:
        - python3.11

  ## Lambda function
  ThumbnailFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-ThumbnailFunction"
      Handler: lambda_function.lambda_handler
      CodeUri: ./src
      Layers:
        - !Ref PillowLayer

      # ✅ FIXED POLICY SECTION — this is the correct format SAM accepts
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
              Resource:
                - !Sub "arn:aws:s3:::${UploadBucket}"
                - !Sub "arn:aws:s3:::${UploadBucket}/*"
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
              Resource: !GetAtt ImageUploadsTable.Arn

      Environment:
        Variables:
          BUCKET_NAME: !Ref UploadBucket

      Events:
        S3UploadEvent:
          Type: S3
          Properties:
            Bucket: !Ref UploadBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: uploads/

Outputs:
  UploadBucketName:
    Description: S3 bucket for uploads
    Value: !Ref UploadBucket

  ThumbnailFunctionName:
    Description: Lambda function name
    Value: !Ref ThumbnailFunction

  ImageUploadsTableName:
    Description: DynamoDB table name
    Value: !Ref ImageUploadsTable